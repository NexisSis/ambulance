{"version":3,"sources":["utils/createMuiTheme.js","views/Start/Start.jsx","data/data.js","blocks/Metronom/Metronom.jsx","blocks/Stopwatch/Stopwatch.jsx","blocks/Menu/Menu.jsx","blocks/Modal/SimpleModal.jsx","views/Information/Information.jsx","views/Main/Main.jsx","views/Finish/Finish.jsx","views/Notfound/Notfound.jsx","db/db.js","views/Logs/Logs.jsx","index.js"],"names":["theme","createMuiTheme","palette","primary","teal","Start","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this","classes","react_default","a","createElement","Fragment","className","heroUnit","heroContent","Typography_default","component","variant","align","color","gutterBottom","paragraph","heroButtons","Grid_default","container","spacing","justify","item","react_router_dom","size","to","Button_default","onClick","console","log","startTime","Date","dbHandlerStartTime","toLocaleString","React","Component","withStyles","backgroundColor","background","paper","height","display","maxWidth","margin","marginTop","unit","data_data","id","title","nextId","prevId","actionButtom","func","acceptAddress","dbHandlerAddress","notification","setState","needRespiration","compressionsType","stopHeart","dbHandlerStopHeart","compressionTime","dbHandlerCompression","Metronom","metronom","100","Audio","110","120","loop","mCount","playedMetronom","pause","canPlayMetronom","play","_this2","metronomContainer","index_es","setMetronomAudio","width","justifyContent","marginLeft","marginRight","Stopwatch","state","running","elapsedTime","previousTime","animation","animationPlayState","onTick","bind","assertThisInitialized","onStart","onStop","onReset","interval","setInterval","clearInterval","now","startBtn","resetBtn","stopBtn","timer","timerMinutes","getUTCMinutes","toString","padStart","timerSeconds","getUTCSeconds","timerMilliseconds","Math","floor","getUTCMilliseconds","toFixed","timerTime","concat","handStyle","style","Menu","CssBaseline_default","AppBar_default","position","appBar","Toolbar_default","tollbarHeight","noWrap","blocks_Metronom_Metronom","blocks_Stopwatch_Stopwatch","Drawer_default","drawer","drawerPaper","anchor","toolbar","center","ListItem_default","button","ListItemText_default","Divider_default","List_default","data","map","text","index","key","selected","dangerouslySetInnerHTML","__html","root","flexShrink","mixins","content","flexGrow","default","padding","alignItems","headerContainer","minHeight","SimpleModal","open","handleOpen","handleClose","Fab_default","aria-label","fabFontSize","Modal_default","aria-labelledby","aria-describedby","onClose","boxShadow","shadows","outline","top","left","transform","fontSize","Information","runFunction","_this$props","currentData","find","el","Number","react_router","Modal_SimpleModal","mx","action","finish","fab","extendedIcon","Main","blocks_Menu_Menu","match","params","views_Information_Information","Finish","saveData","dbSave","assign","finishedTime","acceptDelay","firstSelectValue","TLSRDelay","secondSelectValue","number","buttonDisabled","handleChange","event","target","value","handleChangeFirstSelect","handleChangeSecondSelect","FormControl_default","TextField_default","label","onChange","InputLabel_default","shrink","htmlFor","Select_default","input","Input_default","name","selectMinWidth","MenuItem_default","disabled","minWidth","indexedDB","window","mozIndexedDB","webkitIndexedDB","msIndexedDB","baseName","storeName","logerr","err","connectDB","f","request","onerror","onsuccess","result","onupgradeneeded","e","objectStoreNames","contains","currentTarget","createObjectStore","keyPath","autoIncrement","Logs","rows","db","transaction","objectStore","getAll","Paper_default","Table_default","table","TableHead_default","TableRow_default","TableCell_default","TableBody_default","row","split","overflowX","textAlign","App","file","put","styles","path","exact","render","routeProps","views_Start_Start","views_Finish_Finish","views_Main_Main","Notfound","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8dab45c4.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\nimport teal from '@material-ui/core/colors/teal';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: teal,\n    },\n});\n\nexport default theme;","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    heroUnit: {\n        backgroundColor: theme.palette.background.paper,\n        height: '98vh',\n        display: 'flex'\n    },\n    heroContent: {\n        maxWidth: 800,\n        margin: 'auto',\n    },\n    heroButtons: {\n        marginTop: theme.spacing.unit * 4,\n    }\n});\n\n\nclass Start extends React.Component {\n    constructor(props){\n        super(props);\n\n    }\n    render () {\n        const {classes} = this.props;\n        return (\n            <>\n                <main>\n                    <div className={classes.heroUnit}>\n                        <div className={classes.heroContent}>\n                            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                                Вас приветствует ассистент для\n                                диспетчерского сопровождения СЛР!\n                            </Typography>\n                            <Typography variant=\"h4\" align=\"center\" color=\"textSecondary\" paragraph>\n                                Только для квалифицированных специалистов!\n                            </Typography>\n                          <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\" paragraph>\n                            Авторские права: © Биркун А. А., Уманский Н. Ю., Косова Е. А., 2019\n                          </Typography>\n                            <div className={classes.heroButtons}>\n                                <Grid container spacing={16} justify=\"center\">\n                                    <Grid item>\n                                        <Link color=\"primary\" size=\"large\" to='/main/1'>\n                                            <Button variant=\"contained\" color=\"primary\" size=\"large\" onClick={() => {\n                                                console.log({startTime: new Date()});\n                                                this.props.dbHandlerStartTime({startTime: new Date().toLocaleString(\"ru\")})\n                                            }}>\n                                                Начать\n                                            </Button>\n                                        </Link>\n                                    </Grid>\n                                    <Grid item>\n                                        <Link color=\"primary\" size=\"large\" to='/logs'>\n                                            <Button variant=\"contained\" color=\"primary\" size=\"large\">\n                                                ЖУРНАЛ\n                                            </Button>\n                                        </Link>\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        </div>\n                    </div>\n                </main>\n            </>\n        );\n    }\n}\n\nexport default withStyles(styles)(Start);\n","export default [\n    {\n        id: 1,\n        title: 'Скорая. Что у вас случилось?',\n        nextId: 2\n    },\n    {\n        id: 2,\n        title: 'Какой адрес?',\n        prevId: 1,\n        actionButtom: [\n            {\n                title: 'Адрес подтверждён',\n                nextId: 3,\n                func: function () {\n                    console.log({acceptAddress: new Date()});\n                    this.props.dbHandlerAddress({acceptAddress: new Date().toLocaleString(\"ru\")});\n                }\n            },\n        ],\n    },\n    {\n        id: 3,\n        title: 'Кому нужна помощь?',\n        prevId: 2,\n        nextId: 4,\n    },\n    {\n        id: 4,\n        title: 'Сколько ему примерно лет?',\n        notification: 'В случае остановки сердца у ребенка или взрослого \\n' +\n                      'с асфиксией, потребуется искусственное дыхание',\n        prevId: 3,\n        actionButtom: [\n            {\n                title: 'Ребенок',\n                nextId: 5,\n                func: function() {\n                    this.setState( { needRespiration: true });\n                }\n            },\n            {\n                title: 'Взрослый',\n                nextId: 5,\n                func: function() {\n                    this.setState({ needRespiration: false });\n                }\n            },\n            {\n                title: 'Взрослый с асфиксией',\n                nextId: 5,\n                func: function () {\n                    this.setState({needRespiration: true});\n                }\n            },\n        ],\n    },\n    {\n        id: 5,\n        title: 'Он в сознании <br> [разговаривает; отвечает; реагирует]?',\n        prevId: 4,\n        actionButtom: [\n            {\n                title: 'Да',\n                nextId: -1\n            },\n            {\n                title: 'Нет',\n                nextId: 7\n            },\n            {\n                title: 'Не уверен',\n                nextId: 6\n            },\n        ],\n    },\n    {\n        id: 6,\n        title: 'Осторожно встряхните его за плечи и громко спросите \"Вы в порядке?\". <br> Есть реакция?',\n        prevId: 5,\n        actionButtom: [\n            {\n                title: 'Да',\n                nextId: -1\n            },\n            {\n                title: 'Нет',\n                nextId: 7\n            },\n            {\n                title: 'Не уверен',\n                nextId: 7\n            },\n        ],\n    },\n    {\n        id: 7,\n        title: 'Он нормально дышит?',\n        actionButtom: [\n            {\n                title: 'Да',\n                nextId: -1\n            },\n            {\n                title: 'Нет',\n                nextId: 8,\n                func: function () {\n                    console.log({compressionsType: \"«Время подтверждения остановки сердца/дыхания»\", stopHeart: new Date()});\n                    this.props.dbHandlerStopHeart({stopHeart: new Date().toLocaleString(\"ru\")});\n                }\n            },\n            {\n                title: 'Не уверен',\n                nextId: 1001\n            },\n        ],\n    },\n    {\n        id: 8,\n        title: 'Машина выехала. Слушайте меня внимательно. Я объясню, что делать до приезда скорой.',\n        notification: 'Разъясните: \"Я объясню как делать реанимацию\" или \"Я объясню как оказать первую помощь\"',\n        prevId: 7,\n        actionButtom: [\n            {\n                title: 'Только компрессии',\n                nextId: 9,\n                func: function () {\n                    console.log({compressionsType: \"Только компрессии\" ,compressionTime: new Date()});\n                    this.setState({ needRespiration: false });\n                    this.props.dbHandlerCompression({compressionsType: \"Только компрессии\" ,compressionTime: new Date().toLocaleString(\"ru\")});\n                }\n            },\n            {\n                title: 'Компрессии и искусственное дыхание\\n',\n                nextId: 9,\n                func: function () {\n                    console.log({compressionsType: 'Компрессии и искусственное дыхание', compressionTime: new Date()});\n                    this.setState({ needRespiration: true });\n                    this.props.dbHandlerCompression({compressionsType: \"Компрессии и искусственное дыхание\", compressionTime: new Date().toLocaleString(\"ru\")});\n                }\n            }\n        ],\n\n    },\n    {\n        id: 9,\n        title: 'Уложите его на полу на спину <br> [лицом вверх].',\n        notification: 'Оперативно перепроверьте, если есть сомнения в правильном положении пострадавшего',\n        nextId: 10,\n        prevId: 8\n    },\n    {\n        id: 10,\n        title: 'Встаньте на колени рядом с ним <br> [возле него; сбоку от него].',\n        nextId: 11,\n        prevId: 9\n    },\n    {\n        id: 11,\n        title: 'Поставьте одну руку в центр грудной клетки [в центр груди; между сосков]. Вторую руку поставьте сверху.',\n        notification: 'Для детей младше 1 года – в центре грудной клетки указательным и средним пальцами <br>' +\n        'Для детей от 1 года до 8 лет – одной рукой',\n        nextId: 12,\n        prevId: 10\n\n    },\n    {\n        id: 12,\n        title: 'Сильно давите на грудную клетку. Ваши руки должны быть прямыми. Начинайте: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10... ' +\n        'Давите и считайте вслух: 1, 2, 3... Продолжайте. Не останавливайтесь. Я остаюсь на связи.',\n        notification: 'После выполнения серии компрессий (30 для взрослых' +\n        ' с асфиксией, 15 для детей) перейти к следующему шагу',\n        nextId: 13,\n        prevId: 11\n\n    },\n    {\n        id: 13,\n        title: 'Теперь одной рукой зажмите ему нос, второй рукой — поднимите подбородок вверх, так чтобы его голова запрокинулась назад, но рот оставался открытым.',\n        nextId: 14,\n        prevId: 12\n\n    },\n    {\n        id: 14,\n        title: 'Широко открыв свой рот, плотно охватите губами рот пострадавшего.',\n        notification: 'Для детей 1-го года жизни следует закрывать своим ртом одновременно и рот, и нос ребенка',\n        nextId: 15,\n        prevId: 13\n\n    },\n    {\n        id: 15,\n        title: 'Два раза быстро вдохните в него воздух.',\n        nextId: 16,\n        prevId: 14\n\n    },\n    {\n        id: 16,\n        title: 'Снова начинайте давить на грудную клетку.',\n        nextId: 12,\n        prevId: 15,\n        // finish: true,\n    },\n    {\n        id: 1001,\n        title: 'Используйте одну их техник:',\n        notification:\n        '1. Проведите оценку длительности\\n' +\n        'пауз между вдохами. Если пауза\\n' +\n        'между вдохами больше 7-10 сек\\n' +\n        '(частота дыхания = 6-9 в мин),\\n' +\n        'переходите к предоставлению\\n' +\n        'инструкций по СЛР.<br><br>' +\n        '2. Попросите свидетеля поднести\\n' +\n        'телефон близко ко рту пострадавшего,\\n' +\n        'чтобы оценить характер и частоту\\n' +\n        'дыхания.',\n        prevId: 7,\n        actionButtom: [\n            {\n                title: 'СЛР',\n                nextId: 8\n            },\n        ],\n    },\n];\n\n// Добавить кнопки записи в базу на последней странице\n\n\n// ИНСТРУКЦИЯ:\n// {\n//     id: 0, - id страницы\n//     title: 'Он нормально дышит?', - большой заголовок\n//     notification: 'Надпись под большими буквами', - дополнительная подпись (описание под заголовком)\n//     prevId: 6, - кнопка \"назад\" ведущая на предыдущую страницу с указанным id\n//     nextId: 7, - кнопка \"далее\" ведущая на следующую страницу с указанным id\n//     finish: true или false, - эта страница последняя?, добавляет кнопку выхода из алгоритма\n//     actionButtom: [ - розовые кнопки\n//     {\n//         title: 'Да', - надпись на кнопке\n//         nextId: -1 - на страницу с каким id ведет кнопка?\n//     },\n//     {\n//         title: 'Нет', - надпись на кнопке\n//         nextId: 8, - на страницу с каким id ведет кнопка?\n//         func: function () { - функция, которую выполняет кнопка (необязательно).\n//             console.log({compressionsType: \"«Время подтверждения остановки сердца/дыхания»\", stopHeart: new Date()}); - вывод в консоль\n//             this.props.dbHandlerStopHeart({stopHeart: new Date().toLocaleString(\"ru\")}); - запись в базу\n//         }\n//     },\n//     ],\n// }\n//\n// Информационные страницы имееют id больше 1000. Имеется в виду страницы, после кнопки \"Не уверен\", например страница с описанием техники оценки дыхания.","import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport { Button } from \"@material-ui/core\";\n\nconst styles = theme => ({\n    metronomContainer: {\n        display: 'flex',\n        width: '250px',\n        justifyContent: 'space-between',\n        marginLeft: '25px',\n        marginRight: 'auto'\n    }\n});\n\nclass Metronom extends React.Component {\n    constructor (props) {\n        super(props);\n\n        this.metronom = {\n            100: new Audio('./audio/100.wav'),\n            110: new Audio('./audio/110.wav'),\n            120: new Audio('./audio/120.wav'),\n        };\n\n        this.metronom[\"100\"].loop = true;\n        this.metronom[\"110\"].loop = true;\n        this.metronom[\"120\"].loop = true;\n    }\n\n    setMetronomAudio(mCount) {\n        if (this.playedMetronom) {\n            this.metronom[\"100\"].pause();\n            this.metronom[\"110\"].pause();\n            this.metronom[\"120\"].pause();\n        }\n\n        if (this.playedMetronom === mCount && this.canPlayMetronom) {\n            this.metronom[mCount].pause();\n            this.canPlayMetronom = false;\n        } else {\n            this.metronom[mCount].play();\n            this.playedMetronom = mCount;\n            this.canPlayMetronom = true;\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <>\n                <div className={classes.metronomContainer}>\n                    <Button onClick={() => this.setMetronomAudio(100)} variant=\"contained\" color=\"secondary\" size=\"large\">\n                        100\n                    </Button>\n                    <Button onClick={() => this.setMetronomAudio(110)} variant=\"contained\" color=\"secondary\" size=\"large\">\n                        110\n                    </Button>\n                    <Button onClick={() => this.setMetronomAudio(120)} variant=\"contained\" color=\"secondary\" size=\"large\">\n                        120\n                    </Button>\n                </div>\n\n            </>\n        );\n    }\n}\n\nexport default withStyles(styles)(Metronom);\n","import React from 'react';\nimport './Stopwatch.css'\n\nclass Stopwatch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            running: false,\n            elapsedTime: 0,\n            previousTime: 0,\n            animation: 'none',\n            animationPlayState: 'paused',\n        };\n\n        this.onTick = this.onTick.bind(this);\n        this.onStart = this.onStart.bind(this);\n        this.onStop = this.onStop.bind(this);\n        this.onReset = this.onReset.bind(this);\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(this.onTick, 100);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    onTick() {\n        if (this.state.running) {\n            let now = Date.now();\n            this.setState({\n                previousTime: now,\n                elapsedTime: this.state.elapsedTime + (now - this.state.previousTime),\n                animation: 'rotate 60s infinite linear',\n                animationPlayState: 'running'\n            });\n        }\n    }\n\n    onStart() {\n        this.setState({\n            running: true,\n            previousTime: Date.now(),\n        })\n    }\n\n    onStop() {\n        this.setState({\n            running: false,\n            animationPlayState: 'paused'\n        })\n    }\n\n    onReset() {\n        this.setState({\n            running: false,\n            previousTime: 0,\n            elapsedTime: 0,\n            animation: 'none',\n        });\n    }\n\n    render() {\n        const startBtn = <button className=\"stopwatch__start\" onClick={this.onStart}>Старт</button>;\n        const resetBtn = <button className=\"stopwatch__reset\" onClick={this.onReset}>Обновить</button>;\n        const stopBtn = <button className=\"stopwatch__stop\" onClick={this.onStop}>Стоп</button>;\n\n        let timer = new Date(this.state.elapsedTime);\n        let timerMinutes = timer.getUTCMinutes().toString().padStart(2, '0');\n        let timerSeconds = timer.getUTCSeconds().toString().padStart(2, '0');\n        let timerMilliseconds = Math.floor(timer.getUTCMilliseconds() / 10).toFixed(0).toString().padStart(2, '0');\n\n        let timerTime = `${timerMinutes}:${timerSeconds}:${timerMilliseconds}`;\n\n        const handStyle = {\n            animation: this.state.animation,\n            animationPlayState: this.state.animationPlayState,\n        };\n\n        return (\n            <div className=\"stopwatch__container\">\n                <div className=\"stopwatch\">\n                    <div className=\"stopwatch__buttons\">\n                        { this.state.running ? stopBtn : startBtn }\n                        { resetBtn }\n                        <div className=\"stopwatch__time\">{timerTime}</div>\n                    </div>\n                    <div className=\"stopwatch__face\">\n                        <div className=\"stopwatch__hand-wrap\">\n                            <div className=\"stopwatch__anchor\"></div>\n                            <div style={handStyle} className=\"stopwatch__hand\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Stopwatch;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport data from \"../../data/data\";\nimport Metronom from \"../Metronom/Metronom\";\nimport Stopwatch from \"../Stopwatch/Stopwatch\";\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    toolbar: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.default,\n        padding: theme.spacing.unit * 3,\n    },\n    center: {\n        display: 'flex',\n        alignItems: 'center'\n    },\n    headerContainer: {\n        display: 'flex',\n        width: '250px',\n        justifyContent: 'space-between',\n        marginLeft: '15px',\n    },\n    tollbarHeight: {\n        minHeight: '85px'\n    }\n});\n\nclass Menu extends React.Component {\n    render() {\n        const { classes } = this.props;\n        return (\n            <>\n                <CssBaseline/>\n                <AppBar position=\"fixed\" className={classes.appBar}>\n                    <Toolbar className={classes.tollbarHeight}>\n                        <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                            Метроном\n                        </Typography>\n                        <Metronom/>\n                        <Stopwatch/>\n                    </Toolbar>\n                </AppBar>\n                <Drawer\n                    className={classes.drawer}\n                    variant=\"permanent\"\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                    anchor=\"left\"\n                >\n\n                    <Link className={`${classes.toolbar} ${classes.center} ${classes.tollbarHeight}`}\n                          color=\"primary\" size=\"large\" to='/'>\n                        <ListItem button>\n                            <ListItemText primary={'Сначала'}/>\n                        </ListItem>\n                    </Link>\n\n                    <Divider/>\n                    <List>\n                        {data.map((text, index) => {\n                            if (text.id >= 1000) return;\n                            return (\n                            <Link color=\"primary\" key={index} size=\"large\" to={`/main/${text.id}`}>\n                                    <ListItem selected={text.id === +this.props.id} button>\n                                        <ListItemText primary={<Typography  dangerouslySetInnerHTML={{__html: text.title}} />} />\n                                    </ListItem>\n\n                            </Link>\n                            );\n                        })}\n                        <Link color=\"primary\" size=\"large\" to={`/main/-1`}>\n                            <ListItem button>\n                                <ListItemText primary={'Конец'}/>\n                            </ListItem>\n                        </Link>\n                    </List>\n                    <Divider/>\n                </Drawer>\n            </>\n        );\n    }\n}\n\nexport default withStyles(styles)(Menu);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport Fab from '@material-ui/core/Fab';\n\nconst styles = theme => ({\n    paper: {\n        position: 'absolute',\n        width: 800,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing.unit * 4,\n        outline: 'none',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n    },\n    fabFontSize: {\n        fontSize: 30,\n    },\n\n});\n\nclass SimpleModal extends React.Component {\n    state = {\n        open: false,\n    };\n\n    handleOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <Fab color=\"primary\" onClick={this.handleOpen} aria-label=\"Call\">\n                    <span className={classes.fabFontSize}>?</span>\n                </Fab>\n                <Modal\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                >\n                    <div className={classes.paper}>\n                        <Typography variant=\"h6\" id=\"modal-title\">\n                            Возможные трудности в процессе Т-СЛР и их преодоление:\n                        </Typography>\n                        <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                            Если свидетелю <b>мешает телефон</b>, следует предложить включить громкую связь или на время проведения СЛР положить телефон на пол;\n                        </Typography>\n                        <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                            Если свидетель <b>боится юридических последствий</b>, необходимо убедить его, что закон на его стороне (действие в условиях «крайней необходимости»);\n                        </Typography>\n                        <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                            Если свидетель <b>впадает в панику</b>, нужно проявлять настойчивость и продолжать инструктировать свидетеля спокойным и уверенным тоном, чтобы настроить его на выполнение задачи;\n                        </Typography>\n                        <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                            Если свидетель <b>устает</b>, необходимо напомнить о необходимости держать руки прямыми (не сгибать в локтях);\n                        </Typography>\n                        <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                            Если свидетель полностью <b>исчерпал силы</b>, нужно предложить, чтобы кто-нибудь заменил его;\n                        </Typography>\n                        <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                            Если свидетель <b>боится контактировать</b> с пострадавшим для проведения искусственного дыхания, необходимо перейти к алгоритму «только компрессии»;\n                        </Typography>\n                        <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                            Если свидетель сообщил, что у пострадавшего <b>произошла «рвота»</b>, необходимо дать инструкции повернуть голову пострадавшего на бок и очистить рот.\n                        </Typography>\n                    </div>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SimpleModal);\n","import React from 'react';\n\nimport SimpleModal from '../../blocks/Modal/SimpleModal';\nimport data from '../../data/data';\n\nimport { Link } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\"\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n    toolbar: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3,\n    },\n    fab: {\n        margin: theme.spacing.unit,\n    },\n    extendedIcon: {\n        marginRight: theme.spacing.unit,\n    },\n    heroUnit: {\n        height: '80vh',\n        display: 'flex'\n    },\n    heroContent: {\n        maxWidth: 1200,\n        margin: 'auto',\n    },\n    heroButtons: {\n        marginTop: theme.spacing.unit * 4,\n    }\n});\n\nclass Information extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            needRespiration: false,\n        };\n    }\n\n    runFunction = (func) => {\n        if (func) {\n            func.call(this);\n            // Если функция передается в виде строки то расскомментировать нижнюю, закомментировать верхнюю.\n            // Function(func).bind(this)();\n        }\n    };\n\n    render() {\n        console.log('RESPIRATION IS ', this.state.needRespiration);\n        const { classes, id } = this.props;\n        const currentData = data.find((el) => el.id === Number(id));\n\n        if (!currentData) {\n            return <Redirect to='/notfound' />\n        }\n\n        if (!this.state.needRespiration && currentData.id >= 13 && currentData.id < 1000) {\n            console.log('here');\n            return <Redirect to='/main/-1' />\n        }\n\n        return (\n            <main className={classes.content}>\n                <div className={classes.toolbar} />\n                <SimpleModal />\n\n                <div mx=\"auto\" className={classes.heroUnit}>\n                    <div className={classes.heroContent}>\n                        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom dangerouslySetInnerHTML={{__html: currentData.title}} />\n\n                            {\n                                currentData.notification ?\n                                    <Typography component=\"h2\" variant=\"h5\" align=\"center\" color=\"textPrimary\" gutterBottom dangerouslySetInnerHTML={{__html: currentData.notification}}/>\n                                    : ''\n                            }\n\n                        <div className={classes.heroButtons}>\n                            <Grid container spacing={16} justify=\"center\">\n                                {\n                                    currentData.prevId ?\n                                        <Grid item>\n                                            <Link color=\"primary\" size=\"large\" to={`/main/${currentData.prevId}`}>\n                                                <Button variant=\"contained\" color=\"primary\" size=\"large\">\n                                                    Назад\n                                                </Button>\n                                            </Link>\n                                        </Grid>\n                                        : ''\n                                }\n                                {\n                                    currentData.actionButtom ?\n                                        currentData.actionButtom.map(function(action) {\n                                            return (\n                                                <Grid item>\n                                                    <Link color=\"primary\" size=\"large\" to={`/main/${action.nextId}`}>\n                                                        <Button onClick={() => this.runFunction(action.func)} variant=\"contained\" color=\"secondary\" size=\"large\">\n                                                            {action.title}\n                                                        </Button>\n                                                    </Link>\n                                                </Grid>\n                                            );\n                                        }, this)\n                                        : ''\n                                }\n                              {console.log('CURRENT DATA IS', currentData, currentData.nextId, currentData.finish)}\n                                {\n                                    currentData.nextId || currentData.finish ?\n                                        <Grid item>\n                                            <Link color=\"primary\" size=\"large\" to={currentData.finish ? '/finish' :`/main/${currentData.nextId}`}>\n                                                <Button variant=\"contained\" color=\"primary\" size=\"large\">\n                                                    Вперед\n                                                </Button>\n                                            </Link>\n                                        </Grid>\n                                        : ''\n                                }\n                            </Grid>\n                        </div>\n                    </div>\n                </div>\n            </main>\n        );\n    }\n}\n\nexport default withStyles(styles)(Information);\n","import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Menu from '../../blocks/Menu/Menu';\nimport Information from '../Information/Information';\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n    }\n});\n\nclass Main extends React.Component{\n    constructor(props) {\n        super(props);\n        console.log(props);\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.root} >\n                <Menu id={this.props.match.params.id}/>\n                <Information id={this.props.match.params.id}\n                     dbHandlerStartTime={this.props.dbHandlerStartTime}\n                     dbHandlerAddress={this.props.dbHandlerAddress}\n                     dbHandlerCompression={this.props.dbHandlerCompression}\n                     dbHandlerStopHeart={this.props.dbHandlerStopHeart}\n                />\n            </div>\n        );\n    }\n};\n\nexport default withStyles(styles)(Main);\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\n\nconst styles = theme => ({\n    heroUnit: {\n        backgroundColor: theme.palette.background.paper,\n        height: '100vh',\n        display: 'flex'\n    },\n    heroContent: {\n        maxWidth: 800,\n        margin: 'auto',\n    },\n    heroButtons: {\n        marginTop: theme.spacing.unit * 4,\n    },\n    selectMinWidth: {\n        minWidth: 300\n    }\n});\n\n\nclass Finish extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            firstSelectValue: 'Задержки нет',\n            secondSelectValue: 'Задержки нет',\n            buttonDisabled: true\n        };\n    }\n\n    saveData = () => {\n        this.props.dbSave(Object.assign({}, {\n            finishedTime: new Date().toLocaleString(\"ru\"),\n            acceptDelay: this.state.firstSelectValue,\n            TLSRDelay: this.state.secondSelectValue,\n            number: this.state.number,\n        }));\n        this.setState({buttonDisabled: false});\n    }\n\n  handleChange = (event) => {\n    this.setState({number: event.target.value});\n  }\n    handleChangeFirstSelect = (event) => {\n        this.setState({firstSelectValue: event.target.value});\n    }\n\n    handleChangeSecondSelect = (event) => {\n        this.setState({secondSelectValue: event.target.value});\n    }\n\n    render () {\n        const { classes } = this.props;\n        return (\n            <>\n                <main>\n                    <div className={classes.heroUnit}>\n                        <div className={classes.heroContent}>\n                            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                                Алгоритм завершен\n                            </Typography>\n                              <div className={classes.heroButtons}>\n                                <Grid container spacing={16} justify=\"center\">\n                                  <Grid item>\n                                    <FormControl>\n                                      <TextField\n                                        style={{marginTop: 0}}\n                                        id=\"number\"\n                                        label=\"№ Вызова\"\n                                        value={this.state.number}\n                                        onChange={this.handleChange}\n                                        margin=\"normal\"\n                                      />\n                                    </FormControl>\n                                  </Grid>\n                                  <Grid item>\n                                    <FormControl >\n                                      <InputLabel style={{color:'red'}} shrink htmlFor=\"label-placeholder\">\n                                        Причины задержки подтверждения\n                                      </InputLabel>\n                                      <Select\n                                        value={this.state.firstSelectValue}\n                                        onChange={this.handleChangeFirstSelect}\n                                        input={<Input name=\"age\" id=\"label-placeholder\" />}\n                                        name=\"select\"\n                                        className={classes.selectMinWidth}\n                                      >\n                                        <MenuItem value='Задержки нет'>Задержки нет</MenuItem>\n                                        <MenuItem value='Отказ свидетеля от выполнения инструкций'>Отказ свидетеля от выполнения инструкций</MenuItem>\n                                        <MenuItem value='Эмоциональное состояние свидетеля'>Эмоциональное состояние свидетеля</MenuItem>\n                                        <MenuItem value='Свидетель не на месте происшествия'>Свидетель не на месте происшествия</MenuItem>\n                                        <MenuItem value='Обрыв связи или плохое качество связи'>Обрыв связи или плохое качество связи</MenuItem>\n                                        <MenuItem value='СЛР уже проводится другим свидетелем'>СЛР уже проводится другим свидетелем</MenuItem>\n                                        <MenuItem value='Другое'>Другое</MenuItem>\n                                      </Select>\n                                    </FormControl>\n                                  </Grid>\n                                  <Grid item>\n                                    <FormControl >\n                                      <InputLabel style={{color:'red'}} shrink htmlFor=\"label-placeholder\">\n                                        Причины задержки Т-СЛР\n                                      </InputLabel>\n                                      <Select\n                                        value={this.state.secondSelectValue}\n                                        onChange={this.handleChangeSecondSelect}\n                                        input={<Input name=\"age\" id=\"label-placeholder\" />}\n                                        name=\"select\"\n                                        className={classes.selectMinWidth}\n                                      >\n                                        <MenuItem value='Задержки нет'>Задержки нет</MenuItem>\n                                        <MenuItem value='Необходимость Т-СЛР не подтверждена свидетелем'>Необходимость Т-СЛР не подтверждена свидетелем</MenuItem>\n                                        <MenuItem value='Отказ свидетеля от проведения СЛР'>Отказ свидетеля от проведения СЛР</MenuItem>\n                                        <MenuItem value='Эмоциональное состояние свидетеля'>Эмоциональное состояние свидетеля</MenuItem>\n                                        <MenuItem value='Свидетель физически неспособен проводить СЛР'>Свидетель физически неспособен проводить СЛР</MenuItem>\n                                        <MenuItem value='Свидетель неспособен изменить положение пострадавшего'>Свидетель неспособен изменить положение пострадавшего</MenuItem>\n                                        <MenuItem value='Свидетель не на месте происшествия'>Свидетель не на месте происшествия</MenuItem>\n                                        <MenuItem value='Обрыв связи или плохое качество связи'>Обрыв связи или плохое качество связи</MenuItem>\n                                        <MenuItem value='Наличие явных признаков необратимой смерти'>Наличие явных признаков необратимой смерти</MenuItem>\n                                        <MenuItem value='СЛР уже проводится другим свидетелем'>СЛР уже проводится другим свидетелем</MenuItem>\n                                        <MenuItem value='Есть угроза безопасности свидетеля'>Есть угроза безопасности свидетеля</MenuItem>\n                                        <MenuItem value='Другое'>Другое</MenuItem>\n                                      </Select>\n                                    </FormControl>\n                                  </Grid>\n                                </Grid>\n                               </div>\n                            <div className={classes.heroButtons}>\n                                <Grid container spacing={16} justify=\"center\">\n                                    <Grid item>\n                                        <Link color=\"primary\" size=\"large\" to={this.state.buttonDisabled ? '#' : '/'}>\n                                            <Button disabled={this.state.buttonDisabled} variant=\"contained\" color=\"primary\" size=\"large\">\n                                                Начать сначала\n                                            </Button>\n                                        </Link>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button disabled={!this.state.buttonDisabled} onClick={this.saveData} variant=\"contained\" color=\"secondary\"  size=\"large\">\n                                            Сохранить данные\n                                        </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Link color=\"primary\" size=\"large\" to={this.state.buttonDisabled ? '#' : '/logs'}>\n                                            <Button disabled={this.state.buttonDisabled} variant=\"contained\" color=\"primary\" size=\"large\">\n                                                ЖУРНАЛ\n                                            </Button>\n                                        </Link>\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        </div>\n                    </div>\n                </main>\n            </>\n        );\n    }\n}\n\nexport default withStyles(styles)(Finish);\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    heroUnit: {\n        backgroundColor: theme.palette.background.paper,\n        height: '98vh',\n        display: 'flex'\n    },\n    heroContent: {\n        maxWidth: 800,\n        margin: 'auto',\n    },\n    heroButtons: {\n        marginTop: theme.spacing.unit * 4,\n    }\n});\n\n\nconst Notfound = (props) => {\n    const { classes } = props;\n\n    return (\n        <React.Fragment>\n            <main>\n                {/* Hero unit */}\n                <div className={classes.heroUnit}>\n                    <div className={classes.heroContent}>\n                        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                            Страница не найдена\n                        </Typography>\n                        <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\" paragraph>\n                            Вы указали неправильный адрес. Рекомендуем вам перейти на стартовую страницу либо начать сначала.\n                        </Typography>\n                        <div className={classes.heroButtons}>\n                            <Grid container spacing={16} justify=\"center\">\n                                <Grid item>\n                                    <Link color=\"primary\" size=\"large\" to='/start'>\n                                        <Button variant=\"contained\" color=\"primary\" size=\"large\">\n                                            Стартовая страница\n                                        </Button>\n                                    </Link>\n                                </Grid>\n                                <Grid item>\n                                    <Link color=\"primary\" size=\"large\" to='/main/1'>\n                                        <Button variant=\"contained\" color=\"primary\" size=\"large\">\n                                            Начать сначала\n                                        </Button>\n                                    </Link>\n                                </Grid>\n                            </Grid>\n                        </div>\n                    </div>\n                </div>\n            </main>\n        </React.Fragment>\n    );\n}\n\nexport default withStyles(styles)(Notfound);","// let deleteRequest = indexedDB.deleteDatabase('baseStore)\n\nconst indexedDB   = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB,\n    baseName \t  = \"baseStore\",\n    storeName \t  = \"filesStore\";\n\nfunction logerr(err){\n    console.log(err);\n}\n\nfunction connectDB(f){\n    const request = indexedDB.open(baseName, 1);\n    request.onerror = logerr;\n    request.onsuccess = function(){\n        f(request.result);\n    };\n    request.onupgradeneeded = function(e){\n        let db = request.result;\n        if (!db.objectStoreNames.contains(storeName)) {\n            e.currentTarget.result.createObjectStore(storeName, { keyPath: \"id\", autoIncrement: true});\n        }\n        connectDB(f);\n    }\n}\n\nexport function get(file, f){\n    connectDB(function(db){\n        var request = db.transaction([storeName], \"readonly\").objectStore(storeName).get(file);\n        request.onerror = logerr;\n        request.onsuccess = function(){\n            f(request.result ? request.result : -1);\n        }\n    });\n}\n\nexport function getAll(f){\n    connectDB(function(db){\n        var request = db.transaction([storeName], \"readonly\").objectStore(storeName).getAll();\n        request.onerror = logerr;\n        request.onsuccess = function(){\n            f(request.result ? request.result : -1);\n        }\n    });\n}\n\nexport function set(file){\n    connectDB(function(db){\n        var request = db.transaction([storeName], \"readwrite\").objectStore(storeName).put(file);\n        request.onerror = logerr;\n        request.onsuccess = function(){\n            return request.result;\n        }\n    });\n}\n\nexport function setByKey(file,key){\n    connectDB(function(db){\n        var request = db.transaction([storeName], \"readwrite\").objectStore(storeName).put(file, key);\n        request.onerror = logerr;\n        request.onsuccess = function(){\n            return request.result;\n        }\n    });\n}\n\nexport function del(file){\n    connectDB(function(db){\n        var request = db.transaction([storeName], \"readwrite\").objectStore(storeName).delete(file);\n        request.onerror = logerr;\n        request.onsuccess = function(){\n            console.log(\"File delete from DB:\", file);\n        }\n    });\n}\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport {Link} from \"react-router-dom\";\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { getAll } from '../../db/db.js';\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        marginTop: theme.spacing.unit * 3,\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 700,\n    },\n    heroUnit: {\n        backgroundColor: theme.palette.background.paper,\n        height: '98vh',\n        display: 'flex',\n        textAlign: 'center',\n    },\n    heroContent: {\n        maxWidth: 800,\n        margin: 'auto',\n        textAlign: 'center',\n    },\n    heroButtons: {\n        marginTop: theme.spacing.unit * 4,\n    }\n});\n\nclass Logs extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            rows: [\n                {\n                    number: 'Нет данных',\n                    startTime: 'Нет данных',\n                    acceptAddress: 'Нет данных',\n                    compressionsType: 'Нет данных',\n                    compressionTime: 'Нет данных',\n                    finishedTime: 'Нет данных',\n                    acceptDelay: 'Задержки нет',\n                    TLSRDelay: 'Задержки нет',\n                }\n            ]\n        };\n    }\n\n    componentDidMount() {\n        getAll(result => {\n            console.log('RESULT FROM DB IS', result);\n            this.setState({rows: result})\n        });\n    }\n\n    render () {\n        const {classes} = this.props;\n\n        console.log(this.state);\n        return (\n            <>\n                <div className={classes.heroContent}>\n                    <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                        Журнал Т-СЛР\n                    </Typography>\n                    <Link color=\"primary\" size=\"large\" to='/start'>\n                        <Button variant=\"contained\" color=\"primary\" size=\"large\">\n                            На главную\n                        </Button>\n                    </Link>\n                </div>\n                <Paper className={classes.root}>\n                    <Table className={classes.table}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell align=\"center\">№ Вызова</TableCell>\n                                <TableCell align=\"center\">Дата приема вызова</TableCell>\n                                <TableCell align=\"center\">Время приема вызова</TableCell>\n                                <TableCell align=\"center\">Время подтверждения адреса</TableCell>\n                                <TableCell align=\"center\">Время подтверждения <br /> остановки сердца/дыхания</TableCell>\n                                <TableCell align=\"center\">Причины задержки подтверждения</TableCell>\n                                <TableCell align=\"center\">Тип Т-СЛР</TableCell>\n                                <TableCell align=\"center\">Время начала компрессий</TableCell>\n                                <TableCell align=\"center\">Причины задержки Т-СЛР</TableCell>\n                                <TableCell align=\"center\">Время окончания работы алгоритма</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {this.state.rows.map((row, index) => (\n                                <TableRow key={index}>\n                                    {console.log(row)}\n                                    <TableCell align=\"center\">{row.number}</TableCell>\n                                    <TableCell align=\"center\">{row.startTime && row.startTime.toString().split(',')[0]}</TableCell>\n                                    <TableCell align=\"center\">{row.startTime && row.startTime.toString().split(',')[1]}</TableCell>\n                                    <TableCell align=\"center\">{row.acceptAddress}</TableCell>\n                                    <TableCell align=\"center\">{row.stopHeart}</TableCell>\n                                    <TableCell align=\"center\">{row.acceptDelay}</TableCell>\n                                    <TableCell align=\"center\">{row.compressionsType}</TableCell>\n                                    <TableCell align=\"center\">{row.compressionTime}</TableCell>\n                                    <TableCell align=\"center\">{row.TLSRDelay}</TableCell>\n                                    <TableCell align=\"center\">{row.finishedTime}</TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </Paper>\n            </>\n        );\n    };\n}\n\nexport default withStyles(styles)(Logs);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport theme from './utils/createMuiTheme';\nimport './index.css'\n\nimport Start from './views/Start/Start';\nimport Main from \"./views/Main/Main\";\nimport Finish from \"./views/Finish/Finish\";\nimport Notfound from \"./views/Notfound/Notfound\";\nimport Logs from \"./views/Logs/Logs\";\nimport { set, setByKey, get } from './db/db';\n\nclass App extends React.Component{\n    constructor(props) {\n        super(props);\n        // default value\n        this.state = {\n            startTime: null,\n            acceptAddress: null,\n            compressionsType: null,\n            compressionTime: null,\n            finishedTime: null,\n            stopHeart: null,\n            acceptDelay: 'Задержки нет',\n            TLSRDelay: 'Задержки нет',\n        };\n\n    }\n\n    dbHandlerStartTime = (startTime) => {\n        this.setState(startTime);\n    };\n\n    dbHandlerAddress = (acceptAddress) => {\n        this.setState(acceptAddress);\n    };\n\n    dbHandlerCompression = (compressionsType,compressionTime) => {\n        this.setState(compressionsType);\n        this.setState(compressionTime);\n    };\n\n    dbHandlerStopHeart = (stopHeart) => {\n        this.setState(stopHeart);\n    };\n\n    dbSave = (data) => {\n        console.log(\"TO DB\",Object.assign({}, this.state, data));\n        set(Object.assign({}, this.state, data));\n    };\n\n    render() {\n        return (\n            <MuiThemeProvider theme={theme}>\n                <Router>\n                    <Switch>\n                        <Route path=\"/start\" exact render={\n                            (routeProps) => (\n                                <Start {...routeProps} dbHandlerStartTime={this.dbHandlerStartTime} />)\n                            }\n                        />\n                        <Route path=\"/main/-1\" exact\n                               render={\n                                   (routeProps) => (\n                                       <Finish {...routeProps}\n                                               dbSave={this.dbSave}\n                                       />)\n                               }\n                        />\n                        <Route path=\"/main/:id\" exact\n                               render={\n                                   (routeProps) => (\n                                       <Main {...routeProps}\n                                             dbHandlerAddress={this.dbHandlerAddress}\n                                             dbHandlerCompression={this.dbHandlerCompression}\n                                             dbHandlerStopHeart={this.dbHandlerStopHeart}\n\n                                       />)\n                               }\n                        />\n                        <Route path=\"/finish\" exact\n                               render={\n                                   (routeProps) => (\n                                       <Finish {...routeProps}\n                                               dbSave={this.dbSave}\n                                       />)\n                               }\n                        />\n                        <Route path=\"/logs\" exact component={Logs}/>\n                        <Route path=\"/\" render={\n                            (routeProps) => (\n                                <Start {...routeProps} dbHandlerStartTime={this.dbHandlerStartTime} />)\n                        }/>\n                        <Route component={Notfound}/>\n                    </Switch>\n                </Router>\n            </MuiThemeProvider>\n        );\n    }\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}