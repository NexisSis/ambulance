{"version":3,"sources":["utils/createMuiTheme.js","views/Start/Start.jsx","data/data.js","blocks/Metronom/Metronom.jsx","blocks/Stopwatch/Stopwatch.jsx","blocks/Menu/Menu.jsx","blocks/Modal/SimpleModal.jsx","views/Information/Information.jsx","views/Main/Main.jsx","views/Finish/Finish.jsx","views/Notfound/Notfound.jsx","db/db.js","views/Logs/Logs.jsx","index.js"],"names":["theme","createMuiTheme","palette","primary","teal","Start","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this","classes","react_default","a","createElement","Fragment","className","heroUnit","heroContent","Typography_default","component","variant","align","color","gutterBottom","paragraph","heroButtons","Grid_default","container","spacing","justify","item","react_router_dom","size","to","Button_default","onClick","console","log","startTime","Date","dbHandlerStartTime","toLocaleString","React","Component","withStyles","backgroundColor","background","paper","height","display","maxWidth","margin","marginTop","unit","data","id","title","nextId","prevId","actionButtom","func","acceptAddress","dbHandlerAddress","notification","age","setState","needRespiration","dbHandlerAge","compressionsType","compressionTime","dbHandlerCompression","finish","Metronom","metronom","100","Audio","110","120","loop","mCount","playedMetronom","pause","canPlayMetronom","play","_this2","metronomContainer","index_es","setMetronomAudio","width","justifyContent","marginLeft","Stopwatch","state","running","elapsedTime","previousTime","animation","animationPlayState","onTick","bind","assertThisInitialized","onStart","onStop","onReset","interval","setInterval","clearInterval","now","startBtn","stopBtn","resetBtn","timer","timerMinutes","getUTCMinutes","toString","padStart","timerSeconds","getUTCSeconds","timerMilliseconds","Math","floor","getUTCMilliseconds","toFixed","timerTime","concat","handStyle","style","Menu","CssBaseline_default","AppBar_default","position","appBar","Toolbar_default","tollbarHeight","noWrap","blocks_Metronom_Metronom","blocks_Stopwatch_Stopwatch","Drawer_default","drawer","drawerPaper","anchor","toolbar","center","ListItem_default","button","ListItemText_default","Divider_default","List_default","map","text","index","key","root","flexShrink","mixins","content","flexGrow","default","padding","alignItems","headerContainer","minHeight","SimpleModal","open","handleOpen","handleClose","Fab_default","aria-label","fabFontSize","Modal_default","aria-labelledby","aria-describedby","onClose","boxShadow","shadows","outline","top","left","transform","fontSize","Information","runFunction","_this$props","currentData","find","el","Number","Modal_SimpleModal","mx","dangerouslySetInnerHTML","__html","action","react_router","fab","extendedIcon","marginRight","Main","blocks_Menu_Menu","views_Information_Information","match","params","Finish","finishedTime","dbSaveWithFinishedTime","indexedDB","window","mozIndexedDB","webkitIndexedDB","msIndexedDB","baseName","storeName","logerr","err","connectDB","f","request","onerror","onsuccess","result","onupgradeneeded","e","objectStoreNames","contains","currentTarget","createObjectStore","keyPath","autoIncrement","Logs","rows","db","transaction","objectStore","getAll","Paper_default","Table_default","table","TableHead_default","TableRow_default","TableCell_default","TableBody_default","row","overflowX","minWidth","textAlign","App","file","assign","put","styles","path","exact","render","routeProps","views_Start_Start","views_Finish_Finish","dbSave","views_Main_Main","Notfound","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d2ce3888.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\nimport teal from '@material-ui/core/colors/teal';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: teal,\n    },\n});\n\nexport default theme;","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    heroUnit: {\n        backgroundColor: theme.palette.background.paper,\n        height: '98vh',\n        display: 'flex'\n    },\n    heroContent: {\n        maxWidth: 800,\n        margin: 'auto',\n    },\n    heroButtons: {\n        marginTop: theme.spacing.unit * 4,\n    }\n});\n\n\nclass Start extends React.Component {\n    constructor(props){\n        super(props);\n\n    }\n    render () {\n        const {classes} = this.props;\n        return (\n            <>\n                <main>\n                    <div className={classes.heroUnit}>\n                        <div className={classes.heroContent}>\n                            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                                Вас приветствует асcистент для сердечно-лёгочной реанимации.\n                            </Typography>\n                            <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\" paragraph>\n                                Тут надо тоже что-то написать, например какое-то краткое описание для чего это нужно, как вариант можно что-то про\n                                безопасность, что-то типо, если вы не уверенны, то не стоит. Но вообще этот текст для демонстрации.\n                            </Typography>\n                            <div className={classes.heroButtons}>\n                                <Grid container spacing={16} justify=\"center\">\n                                    <Grid item>\n                                        <Link color=\"primary\" size=\"large\" to='/main/1'>\n                                            <Button variant=\"contained\" color=\"primary\" size=\"large\" onClick={() => {\n                                                console.log({startTime: new Date()});\n                                                this.props.dbHandlerStartTime({startTime: new Date().toLocaleString(\"ru\")})\n                                            }}>\n                                                Начать\n                                            </Button>\n                                        </Link>\n                                    </Grid>\n                                    <Grid item>\n                                        <Link color=\"primary\" size=\"large\" to='/logs'>\n                                            <Button variant=\"contained\" color=\"primary\" size=\"large\">\n                                                Логи\n                                            </Button>\n                                        </Link>\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        </div>\n                    </div>\n                </main>\n            </>\n        );\n    }\n}\n\nexport default withStyles(styles)(Start);\n","export default [\n    {\n        id: 1,\n        title: 'Скорая. Что у вас случилось?',\n        nextId: 2\n    },\n    {\n        id: 2,\n        title: 'Какой адрес?',\n        prevId: 1,\n        actionButtom: [\n            {\n                title: 'Адрес подтверждён',\n                nextId: 3,\n                func: function () {\n                    console.log({acceptAddress: new Date()});\n                    this.props.dbHandlerAddress({acceptAddress: new Date().toLocaleString(\"ru\")});\n                }\n            },\n        ],\n    },\n    {\n        id: 3,\n        title: 'Кому нужна помощь?',\n        nextId: 4,\n    },\n    {\n        id: 4,\n        title: 'Сколько ему примерно лет?',\n        notification: 'В случае остановки сердца у ребенка или взрослого \\n' +\n                      'с асфиксией, потребуется искусственное дыхание',\n        prevId: 3,\n        actionButtom: [\n            {\n                title: 'Ребенок',\n                nextId: 5,\n                func: function() {\n                    console.log({age: \"Ребенок\"});\n                    this.setState( { needRespiration: true });\n                    this.props.dbHandlerAge({age: \"Ребенок\"});\n                }\n            },\n            {\n                title: 'Взрослый',\n                nextId: 5,\n                func: function() {\n                    console.log({age: \"Взрослый\"});\n                    this.setState({ needRespiration: false });\n                    this.props.dbHandlerAge({age: \"Взрослый\"});\n                }\n            },\n            {\n                title: 'Взрослый с асфиксией',\n                nextId: 5,\n                func: function () {\n                    console.log({age: \"Взрослый c асфиксией\"});\n                    this.setState({needRespiration: true});\n                    this.props.dbHandlerAge({age: \"Взрослый с асфиксией\"});\n                }\n            },\n        ],\n    },\n    {\n        id: 5,\n        title: 'Он в сознании (разговаривает; отвечает; реагирует)?',\n        prevId: 4,\n        actionButtom: [\n            {\n                title: 'Да',\n                nextId: 6\n            },\n            {\n                title: 'Нет',\n                nextId: 7\n            }\n        ],\n    },\n    {\n        id: 6,\n        title: 'Осторожно встряхните его за плечи и громко спросите \"Вы в порядке?\". Есть реакция?',\n        actionButtom: [\n            {\n                title: 'Да',\n                nextId: -1\n            },\n            {\n                title: 'Нет',\n                nextId: 7\n            },\n            {\n                title: 'Не уверен',\n                nextId: 1001\n            },\n        ],\n    },\n    {\n        id: 7,\n        title: 'Он нормально дышит?',\n        actionButtom: [\n            {\n                title: 'Да',\n                nextId: -1\n            },\n            {\n                title: 'Нет',\n                nextId: 8\n            },\n            {\n                title: 'Не уверен',\n                nextId: 1001\n            },\n        ],\n    },\n    {\n        id: 8,\n        title: 'Машина выехала. Слушайте меня внимательно. Я объясню, что делать до приезда скорой.',\n        notification: 'Разъясните: \"Я объясню как делать реанимацию\" или \"Я объясню как оказать первую помощь\"',\n        actionButtom: [\n            {\n                title: 'Только компрессии',\n                nextId: 9,\n                func: function () {\n                    console.log({compressionsType: \"Только компрессии\" ,compressionTime: new Date()});\n                    this.setState({ needRespiration: false });\n                    this.props.dbHandlerCompression({compressionsType: \"Только компрессии\" ,compressionTime: new Date().toLocaleString(\"ru\")});\n                }\n            },\n            {\n                title: 'Компрессии и искусственное дыхание\\n',\n                nextId: 9,\n                func: function () {\n                    console.log({compressionsType: 'Компрессии и искусственное дыхание', compressionTime: new Date()});\n                    this.setState({ needRespiration: true });\n                    this.props.dbHandlerCompression({compressionsType: \"Компрессии и искусственное дыхание\", compressionTime: new Date().toLocaleString(\"ru\")});\n                }\n            }\n        ],\n\n    },\n    {\n        id: 9,\n        title: 'Уложите его на полу на спину [лицом вверх].',\n        notification: 'Оперативно перепроверьте, если есть сомнения в правильном положении пострадавшего',\n        nextId: 10,\n    },\n    {\n        id: 10,\n        title: 'Встаньте на колени рядом с ним [возле него; сбоку от него].',\n        notification: 'Оперативно перепроверьте, если есть сомнения в правильном положении пострадавшего',\n        nextId: 11,\n        prevId: 9\n    },\n    {\n        id: 11,\n        title: 'Поставьте одну руку в центр грудной клетки [в центр груди; между сосков]. Вторую руку поставьте сверху.',\n        notification: 'Для детей младше 1 года – в центре грудной клетки указательным и средним пальцами <br>' +\n        'Для детей от 1 года до 8 лет – одной рукой',\n        nextId: 12,\n        prevId: 10\n\n    },\n    {\n        id: 12,\n        title: 'Давите на грудную клетку' +\n        'как можно сильнее. Ваши руки должны быть прямыми. Начинайте: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10... ' +\n        'Давите и считайте вслух. Продолжайте. Не останавливайтесь. Я остаюсь на связи.',\n        notification: 'После выполнения серии компрессий (30 для взрослых' +\n        'с асфиксией, 15 для детей) перейти к следующему шагу',\n        nextId: 13,\n        prevId: 11\n\n    },\n    {\n        id: 13,\n        title: 'Теперь одной рукой зажмите ему нос, второй рукой — поднимите подбородок вверх, так чтобы его голова запрокинулась назад.',\n        nextId: 14,\n        prevId: 12\n\n    },\n    {\n        id: 14,\n        title: 'Полностью накройте его рот своим ртом.',\n        notification: 'Для детей 1 года жизни следует закрывать своим ртом одновременно и рот, и нос ребенка',\n        nextId: 15,\n        prevId: 13\n\n    },\n    {\n        id: 15,\n        title: 'Два раза быстро вдохните в него воздух.',\n        nextId: 16,\n        prevId: 14\n\n    },\n    {\n        id: 16,\n        title: 'Снова начинайте давить на грудную клетку.',\n        nextId: 12,\n        prevId: 15,\n        finish: true,\n    },\n    {\n        id: 1001,\n        title: 'Используйте одну их техник:',\n        notification: '1. Проведите оценку длительности пауз между вдохами. Для этого попросите свидетеля произносить «есть» каждый раз, когда пострадавший делает вдох,' +\n        ' и оцените интервал между вдохами. Если пауза между вдохами превышает 7-10 секунд у пострадавшего без сознания (что соответствует частоте дыхания 6-9 в минуту), ' +\n        'следует переходить к предоставлению инструкций по СЛР.<br><br>' +\n        '2. Попросите свидетеля поднести телефон близко ко рту пострадавшего, чтобы услышать и таким образом оценить характер и частоту дыхания.\\n',\n        prevId: 7,\n    },\n];\n\n// Cделать запись в базу\n// Какой механизм записи выбрать?\n// https://www.html5rocks.com/en/tutorials/offline/storage/\n// Выбор https://www.w3.org/TR/IndexedDB/\n\n// Настроил переходы\n// Добавил таймер\n// Условие выхода из при компресси и исскуственное дыхание, в доке написан цикл без точки выхода\n\n\n\n// Выделить кнопку старт таймера\n// Добавить кнопку выхода\n\n\n// Источники указывать так : [ Цифра ].\n// В конце указать соответсвие. так: [1] WIKI: (автор) \"название публикации\" (год статьи/либо copywriting)-url \"http:google.com\" (проверено 18.06.2019)\n","import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport { Button } from \"@material-ui/core\";\n\nconst styles = theme => ({\n    metronomContainer: {\n        display: 'flex',\n        width: '250px',\n        justifyContent: 'space-between',\n        marginLeft: '15px',\n    }\n});\n\nclass Metronom extends React.Component {\n    constructor (props) {\n        super(props);\n\n        this.metronom = {\n            100: new Audio('./audio/100.mp3'),\n            110: new Audio('./audio/110.mp3'),\n            120: new Audio('./audio/120.mp3'),\n        };\n\n        this.metronom[\"100\"].loop = true;\n        this.metronom[\"110\"].loop = true;\n        this.metronom[\"120\"].loop = true;\n    }\n\n    setMetronomAudio(mCount) {\n        if (this.playedMetronom) {\n            this.metronom[\"100\"].pause();\n            this.metronom[\"110\"].pause();\n            this.metronom[\"120\"].pause();\n        }\n\n        if (this.playedMetronom === mCount && this.canPlayMetronom) {\n            this.metronom[mCount].pause();\n            this.canPlayMetronom = false;\n        } else {\n            this.metronom[mCount].play();\n            this.playedMetronom = mCount;\n            this.canPlayMetronom = true;\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <>\n                <div className={classes.metronomContainer}>\n                    <Button onClick={() => this.setMetronomAudio(120)} variant=\"contained\" color=\"secondary\" size=\"large\">\n                        120\n                    </Button>\n                    <Button onClick={() => this.setMetronomAudio(110)} variant=\"contained\" color=\"secondary\" size=\"large\">\n                        110\n                    </Button>\n                    <Button onClick={() => this.setMetronomAudio(100)} variant=\"contained\" color=\"secondary\" size=\"large\">\n                        100\n                    </Button>\n                </div>\n\n            </>\n        );\n    }\n}\n\nexport default withStyles(styles)(Metronom);\n","import React from 'react';\nimport './Stopwatch.css'\n\nclass Stopwatch extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            running: false,\n            elapsedTime: 0,\n            previousTime: 0,\n            animation: 'none',\n            animationPlayState: 'paused',\n        };\n\n        this.onTick = this.onTick.bind(this);\n        this.onStart = this.onStart.bind(this);\n        this.onStop = this.onStop.bind(this);\n        this.onReset = this.onReset.bind(this);\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(this.onTick, 100);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    onTick() {\n        if (this.state.running) {\n            let now = Date.now();\n            this.setState({\n                previousTime: now,\n                elapsedTime: this.state.elapsedTime + (now - this.state.previousTime),\n                animation: 'rotate 60s infinite linear',\n                animationPlayState: 'running'\n            });\n        }\n    }\n\n    onStart() {\n        this.setState({\n            running: true,\n            previousTime: Date.now(),\n        })\n    }\n\n    onStop() {\n        this.setState({\n            running: false,\n            animationPlayState: 'paused'\n        })\n    }\n\n    onReset() {\n        this.setState({\n            running: false,\n            previousTime: 0,\n            elapsedTime: 0,\n            animation: 'none',\n        });\n    }\n\n    render() {\n        const startBtn = <button className=\"stopwatch__start\" onClick={this.onStart}>Старт</button>;\n        const stopBtn = <button className=\"stopwatch__stop\" onClick={this.onStop}>Стоп</button>;\n        const resetBtn = <button className=\"stopwatch__reset\" onClick={this.onReset}>Обновить</button>;\n\n        let timer = new Date(this.state.elapsedTime);\n        let timerMinutes = timer.getUTCMinutes().toString().padStart(2, '0');\n        let timerSeconds = timer.getUTCSeconds().toString().padStart(2, '0');\n        let timerMilliseconds = Math.floor(timer.getUTCMilliseconds() / 10).toFixed(0).toString().padStart(2, '0');\n\n        let timerTime = `${timerMinutes}:${timerSeconds}:${timerMilliseconds}`;\n\n        const handStyle = {\n            animation: this.state.animation,\n            animationPlayState: this.state.animationPlayState,\n        };\n\n        return (\n            <div className=\"stopwatch__container\">\n                <div className=\"stopwatch\">\n                    <div className=\"stopwatch__buttons\">\n                        { resetBtn }\n                        { this.state.running ? stopBtn : startBtn }\n                        <div className=\"stopwatch__time\">{timerTime}</div>\n                    </div>\n                    <div className=\"stopwatch__face\">\n                        <div className=\"stopwatch__hand-wrap\">\n                            <div className=\"stopwatch__anchor\"></div>\n                            <div style={handStyle} className=\"stopwatch__hand\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Stopwatch;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport data from \"../../data/data\";\nimport Metronom from \"../Metronom/Metronom\";\nimport Stopwatch from \"../Stopwatch/Stopwatch\";\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    toolbar: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.default,\n        padding: theme.spacing.unit * 3,\n    },\n    center: {\n        display: 'flex',\n        alignItems: 'center'\n    },\n    headerContainer: {\n        display: 'flex',\n        width: '250px',\n        justifyContent: 'space-between',\n        marginLeft: '15px',\n    },\n    tollbarHeight: {\n        minHeight: '85px'\n    }\n});\n\nclass Menu extends React.Component {\n    render() {\n        const { classes } = this.props;\n        return (\n            <>\n                <CssBaseline/>\n                <AppBar position=\"fixed\" className={classes.appBar}>\n                    <Toolbar className={classes.tollbarHeight}>\n                        <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                            Сердечно легочная реанимация\n                        </Typography>\n                        <Metronom/>\n                        <Stopwatch/>\n                    </Toolbar>\n                </AppBar>\n                <Drawer\n                    className={classes.drawer}\n                    variant=\"permanent\"\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                    anchor=\"left\"\n                >\n\n                    <Link className={`${classes.toolbar} ${classes.center} ${classes.tollbarHeight}`}\n                          color=\"primary\" size=\"large\" to='/'>\n                        <ListItem button>\n                            <ListItemText primary={'Сначала'}/>\n                        </ListItem>\n                    </Link>\n\n                    <Divider/>\n                    <List>\n                        {data.map((text, index) => {\n                            if (text.id >= 1000) return;\n                            return (\n                                <Link color=\"primary\" key={index} size=\"large\" to={`/main/${text.id}`}>\n                                    <ListItem button>\n                                        <ListItemText primary={text.title}/>\n                                    </ListItem>\n                                </Link>\n                            );\n                        })}\n                    </List>\n                    <Divider/>\n                </Drawer>\n            </>\n        );\n    }\n}\n\nexport default withStyles(styles)(Menu);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport Fab from '@material-ui/core/Fab';\n\nconst styles = theme => ({\n    paper: {\n        position: 'absolute',\n        width: 800,\n        backgroundColor: theme.palette.background.paper,\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing.unit * 4,\n        outline: 'none',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n    },\n    fabFontSize: {\n        fontSize: 30,\n    },\n\n});\n\nclass SimpleModal extends React.Component {\n    state = {\n        open: false,\n    };\n\n    handleOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <Fab color=\"primary\" onClick={this.handleOpen} aria-label=\"Call\">\n                    <span className={classes.fabFontSize}>?</span>\n                </Fab>\n                <Modal\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                >\n                    <div className={classes.paper}>\n                        <Typography variant=\"h6\" id=\"modal-title\">\n                            Возможные трудности в процессе Т-СЛР и их преодоление:\n                        </Typography>\n                        <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                            Если свидетелю <b>мешает телефон</b>, следует предложить включить громкую связь или на время проведения СЛР положить телефон на пол;\n                        </Typography>\n                        <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                            Если свидетель <b>боится юридических последствий</b>, необходимо убедить его, что закон на его стороне (действие в условиях «крайней необходимости»);\n                        </Typography>\n                        <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                            Если свидетель <b>впадает в панику</b>, нужно проявлять настойчивость и продолжать инструктировать свидетеля спокойным и уверенным тоном, чтобы настроить его на выполнение задачи;\n                        </Typography>\n                        <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                            Если свидетель <b>устает</b>, необходимо напомнить о необходимости держать руки прямыми (не сгибать в локтях);\n                        </Typography>\n                        <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                            Если свидетель полностью <b>исчерпал силы</b>, нужно предложить, чтобы кто-нибудь заменил его;\n                        </Typography>\n                        <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                            Если свидетель <b>боится контактировать</b> с пострадавшим для проведения искусственного дыхания, необходимо перейти к алгоритму «только компрессии»;\n                        </Typography>\n                        <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n                            Если свидетель сообщил, что у пострадавшего <b>произошла «рвота»</b>, необходимо дать инструкции повернуть голову пострадавшего на бок и очистить рот.\n                        </Typography>\n                    </div>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SimpleModal);\n","import React from 'react';\n\nimport SimpleModal from '../../blocks/Modal/SimpleModal';\nimport data from '../../data/data';\n\nimport { Link } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\"\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n    toolbar: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3,\n    },\n    fab: {\n        margin: theme.spacing.unit,\n    },\n    extendedIcon: {\n        marginRight: theme.spacing.unit,\n    },\n    heroUnit: {\n        height: '80vh',\n        display: 'flex'\n    },\n    heroContent: {\n        maxWidth: 1200,\n        margin: 'auto',\n    },\n    heroButtons: {\n        marginTop: theme.spacing.unit * 4,\n    }\n});\n\nclass Information extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            needRespiration: false,\n        };\n    }\n\n    runFunction = (func) => {\n        if (func) {\n            func.call(this);\n            // Если функция передается в виде строки то расскомментировать нижнюю, закомментировать верхнюю.\n            // Function(func).bind(this)();\n        }\n    };\n\n    render() {\n        const { classes, id } = this.props;\n        const currentData = data.find((el) => el.id === Number(id));\n\n        if (!currentData) {\n            return <Redirect to='/notfound' />\n        }\n\n        if (!this.state.needRespiration && id >= 12) {\n            currentData.finish = true;\n        }\n\n        return (\n            <main className={classes.content}>\n                <div className={classes.toolbar} />\n                <SimpleModal />\n\n                <div mx=\"auto\" className={classes.heroUnit}>\n                    <div className={classes.heroContent}>\n                        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                            {currentData.title}\n                        </Typography>\n\n                            {\n                                currentData.notification ?\n                                    <Typography component=\"h2\" variant=\"h5\" align=\"center\" color=\"textPrimary\" gutterBottom dangerouslySetInnerHTML={{__html: currentData.notification}}/>\n                                    : ''\n                            }\n\n                        <div className={classes.heroButtons}>\n                            <Grid container spacing={16} justify=\"center\">\n                                {\n                                    currentData.prevId ?\n                                        <Grid item>\n                                            <Link color=\"primary\" size=\"large\" to={`/main/${currentData.prevId}`}>\n                                                <Button variant=\"contained\" color=\"primary\" size=\"large\">\n                                                    Назад\n                                                </Button>\n                                            </Link>\n                                        </Grid>\n                                        : ''\n                                }\n                                {\n                                    currentData.actionButtom ?\n                                        currentData.actionButtom.map(function(action) {\n                                            return (\n                                                <Grid item>\n                                                    <Link color=\"primary\" size=\"large\" to={`/main/${action.nextId}`}>\n                                                        <Button onClick={() => this.runFunction(action.func)} variant=\"contained\" color=\"secondary\" size=\"large\">\n                                                            {action.title}\n                                                        </Button>\n                                                    </Link>\n                                                </Grid>\n                                            );\n                                        }, this)\n                                        : ''\n                                }\n                                {\n                                    currentData.nextId || currentData.finish ?\n                                        <Grid item>\n                                            <Link color=\"primary\" size=\"large\" to={currentData.finish ? '/finish' :`/main/${currentData.nextId}`}>\n                                                <Button variant=\"contained\" color=\"primary\" size=\"large\">\n                                                    {currentData.finish ? 'Конец' : 'Вперед'}\n                                                </Button>\n                                            </Link>\n                                        </Grid>\n                                        : ''\n                                }\n                            </Grid>\n                        </div>\n                    </div>\n                </div>\n            </main>\n        );\n    }\n}\n\nexport default withStyles(styles)(Information);\n","import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Menu from '../../blocks/Menu/Menu';\nimport Information from '../Information/Information';\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n    }\n});\n\nclass Main extends React.Component{\n    constructor(props) {\n        super(props);\n        console.log(props);\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.root}>\n                <Menu/>\n                <Information id={this.props.match.params.id}\n                     dbHandlerStartTime={this.props.dbHandlerStartTime}\n                     dbHandlerAddress={this.props.dbHandlerAddress}\n                     dbHandlerAge={this.props.dbHandlerAge}\n                     dbHandlerCompression={this.props.dbHandlerCompression}\n                />\n            </div>\n        );\n    }\n};\n\nexport default withStyles(styles)(Main);\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    heroUnit: {\n        backgroundColor: theme.palette.background.paper,\n        height: '100vh',\n        display: 'flex'\n    },\n    heroContent: {\n        maxWidth: 800,\n        margin: 'auto',\n    },\n    heroButtons: {\n        marginTop: theme.spacing.unit * 4,\n    }\n});\n\n\nclass Finish extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        console.log({finishedTime: new Date()});\n        this.props.dbSaveWithFinishedTime({finishedTime: new Date().toLocaleString(\"ru\")});\n\n    }\n    render () {\n\n        const { classes } = this.props;\n        return (\n            <>\n                <main>\n                    <div className={classes.heroUnit}>\n                        <div className={classes.heroContent}>\n                            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                                Вы справились! Поздравляю!\n                            </Typography>\n                            <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\" paragraph>\n                                Вы можете начать сначала, либо пойти домой и попить чай, ибо вы и так уже много сделали. Тоже просто текст.\n                            </Typography>\n                            <div className={classes.heroButtons}>\n                                <Grid container spacing={16} justify=\"center\">\n                                    <Grid item>\n                                        <Link color=\"primary\" size=\"large\" to='/'>\n                                            <Button variant=\"contained\" color=\"primary\" size=\"large\">\n                                                Начать сначала\n                                            </Button>\n                                        </Link>\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        </div>\n                    </div>\n                </main>\n            </>\n        );\n    }\n}\n\nexport default withStyles(styles)(Finish);\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    heroUnit: {\n        backgroundColor: theme.palette.background.paper,\n        height: '98vh',\n        display: 'flex'\n    },\n    heroContent: {\n        maxWidth: 800,\n        margin: 'auto',\n    },\n    heroButtons: {\n        marginTop: theme.spacing.unit * 4,\n    }\n});\n\n\nconst Notfound = (props) => {\n    const { classes } = props;\n\n    return (\n        <React.Fragment>\n            <main>\n                {/* Hero unit */}\n                <div className={classes.heroUnit}>\n                    <div className={classes.heroContent}>\n                        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                            Страница не найдена\n                        </Typography>\n                        <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\" paragraph>\n                            Вы указали неправильный адрес. Рекомендуем вам перейти на стартовую страницу либо начать сначала.\n                        </Typography>\n                        <div className={classes.heroButtons}>\n                            <Grid container spacing={16} justify=\"center\">\n                                <Grid item>\n                                    <Link color=\"primary\" size=\"large\" to='/start'>\n                                        <Button variant=\"contained\" color=\"primary\" size=\"large\">\n                                            Стартовая страница\n                                        </Button>\n                                    </Link>\n                                </Grid>\n                                <Grid item>\n                                    <Link color=\"primary\" size=\"large\" to='/main/1'>\n                                        <Button variant=\"contained\" color=\"primary\" size=\"large\">\n                                            Начать сначала\n                                        </Button>\n                                    </Link>\n                                </Grid>\n                            </Grid>\n                        </div>\n                    </div>\n                </div>\n            </main>\n        </React.Fragment>\n    );\n}\n\nexport default withStyles(styles)(Notfound);","// let deleteRequest = indexedDB.deleteDatabase('baseStore)\n\nconst indexedDB   = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB,\n    baseName \t  = \"baseStore\",\n    storeName \t  = \"filesStore\";\n\nfunction logerr(err){\n    console.log(err);\n}\n\nfunction connectDB(f){\n    const request = indexedDB.open(baseName, 1);\n    request.onerror = logerr;\n    request.onsuccess = function(){\n        f(request.result);\n    };\n    request.onupgradeneeded = function(e){\n        let db = request.result;\n        if (!db.objectStoreNames.contains(storeName)) {\n            e.currentTarget.result.createObjectStore(storeName, { keyPath: \"id\", autoIncrement: true});\n        }\n        connectDB(f);\n    }\n}\n\nexport function get(file, f){\n    connectDB(function(db){\n        var request = db.transaction([storeName], \"readonly\").objectStore(storeName).get(file);\n        request.onerror = logerr;\n        request.onsuccess = function(){\n            f(request.result ? request.result : -1);\n        }\n    });\n}\n\nexport function getAll(f){\n    connectDB(function(db){\n        var request = db.transaction([storeName], \"readonly\").objectStore(storeName).getAll();\n        request.onerror = logerr;\n        request.onsuccess = function(){\n            f(request.result ? request.result : -1);\n        }\n    });\n}\n\nexport function set(file){\n    connectDB(function(db){\n        var request = db.transaction([storeName], \"readwrite\").objectStore(storeName).put(file);\n        request.onerror = logerr;\n        request.onsuccess = function(){\n            return request.result;\n        }\n    });\n}\n\nexport function del(file){\n    connectDB(function(db){\n        var request = db.transaction([storeName], \"readwrite\").objectStore(storeName).delete(file);\n        request.onerror = logerr;\n        request.onsuccess = function(){\n            console.log(\"File delete from DB:\", file);\n        }\n    });\n}\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport {Link} from \"react-router-dom\";\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { getAll } from '../../db/db.js';\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        marginTop: theme.spacing.unit * 3,\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 700,\n    },\n    heroUnit: {\n        backgroundColor: theme.palette.background.paper,\n        height: '98vh',\n        display: 'flex',\n        textAlign: 'center',\n    },\n    heroContent: {\n        maxWidth: 800,\n        margin: 'auto',\n        textAlign: 'center',\n    },\n    heroButtons: {\n        marginTop: theme.spacing.unit * 4,\n    }\n});\n\nclass Logs extends React.Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            rows: [\n                {\n                    startTime: 'Нет данных',\n                    acceptAddress: 'Нет данных',\n                    age: 'Нет данных',\n                    compressionsType: 'Нет данных',\n                    compressionTime: 'Нет данных',\n                    finishedTime: 'Нет данных',\n                }\n            ]\n        };\n    }\n\n    componentDidMount() {\n        getAll(result => {\n            console.log('RESULT FROM DB IS', result);\n            this.setState({rows: result})\n        });\n    }\n\n    render () {\n        const {classes} = this.props;\n\n        console.log(this.state);\n        return (\n            <>\n                <div className={classes.heroContent}>\n                    <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                        Записи из базы данных\n                    </Typography>\n                    <Link color=\"primary\" size=\"large\" to='/start'>\n                        <Button variant=\"contained\" color=\"primary\" size=\"large\">\n                            На главную\n                        </Button>\n                    </Link>\n                </div>\n                <Paper className={classes.root}>\n                    <Table className={classes.table}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell align=\"center\">Время начала</TableCell>\n                                <TableCell align=\"center\">Время подтверждения адреса</TableCell>\n                                <TableCell align=\"center\">Возраст</TableCell>\n                                <TableCell align=\"center\">Тип компрессии</TableCell>\n                                <TableCell align=\"center\">Время начала компрессии</TableCell>\n                                <TableCell align=\"center\">Время окончания работы алгоритма</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {this.state.rows.map((row, index) => (\n                                <TableRow key={index}>\n                                    {console.log(row)}\n                                    <TableCell align=\"center\">{row.startTime}</TableCell>\n                                    <TableCell align=\"center\">{row.acceptAddress}</TableCell>\n                                    <TableCell align=\"center\">{row.age}</TableCell>\n                                    <TableCell align=\"center\">{row.compressionsType}</TableCell>\n                                    <TableCell align=\"center\">{row.compressionTime}</TableCell>\n                                    <TableCell align=\"center\">{row.finishedTime}</TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </Paper>\n            </>\n        );\n    };\n}\n\nexport default withStyles(styles)(Logs);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport theme from './utils/createMuiTheme';\nimport './index.css'\n\nimport Start from './views/Start/Start';\nimport Main from \"./views/Main/Main\";\nimport Finish from \"./views/Finish/Finish\";\nimport Notfound from \"./views/Notfound/Notfound\";\nimport Logs from \"./views/Logs/Logs\";\nimport { set } from './db/db';\n\nclass App extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            startTime: null,\n            acceptAddress: null,\n            age: null,\n            compressionsType: null,\n            compressionTime: null,\n            finishedTime: null,\n        };\n        this.dbHandlerStartTime = this.dbHandlerStartTime.bind(this);\n\n    }\n\n    dbHandlerStartTime = (startTime) => {\n        this.setState(startTime);\n\n    };\n\n    dbHandlerAddress = (acceptAddress) => {\n        this.setState(acceptAddress);\n    };\n\n    dbHandlerAge = (age) => {\n        this.setState( age );\n    };\n\n    dbHandlerCompression = (compressionsType,compressionTime) => {\n        this.setState(compressionsType);\n        this.setState(compressionTime);\n    };\n\n    dbSaveWithFinishedTime = (finishedTime) => {\n        console.log(\"TO DB\",Object.assign({}, this.state, finishedTime));\n        set(Object.assign({}, this.state, finishedTime));\n    };\n\n    render() {\n        return (\n            <MuiThemeProvider theme={theme}>\n                <Router>\n                    <Switch>\n                        <Route path=\"/start\" exact render={\n                            (routeProps) => (\n                                <Start {...routeProps} dbHandlerStartTime={this.dbHandlerStartTime} />)\n                            }\n                        />\n                        <Route path=\"/main/-1\" exact\n                               render={\n                                   (routeProps) => (<Finish {...routeProps} dbSave={this.dbSaveWithFinishedTime} />)\n                               }\n                        />\n                        <Route path=\"/main/:id\" exact\n                               render={\n                                   (routeProps) => (\n                                       <Main {...routeProps}\n                                             dbHandlerAddress={this.dbHandlerAddress}\n                                             dbHandlerAge={this.dbHandlerAge}\n                                             dbHandlerCompression={this.dbHandlerCompression}\n                                       />)\n                               }\n                        />\n                        <Route path=\"/finish\" exact\n                               render={\n                                   (routeProps) => (\n                                       <Finish {...routeProps} dbSaveWithFinishedTime={this.dbSaveWithFinishedTime}/>)\n                               }\n                        />\n                        <Route path=\"/logs\" exact component={Logs}/>\n                        <Route path=\"/\" render={\n                            (routeProps) => (\n                                <Start {...routeProps} dbHandlerStartTime={this.dbHandlerStartTime} />)\n                        }/>\n                        <Route component={Notfound}/>\n                    </Switch>\n                </Router>\n            </MuiThemeProvider>\n        );\n    }\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}